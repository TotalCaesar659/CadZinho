# Make file for CadZinho on Windows Visual C++ version
# Yuguo Zhang <Exaybachay@126.com>
# This makefile is for using Visual C++ with nmake.
# Usage for Microsoft:
#     nmake -f Makefile.msvc
# For debug versions define DEBUG on the command line:
#     nmake DEBUG=1 -f Makefile.msvc
# For x86_64 versions define WIN64 on the command line:
#     nmake WIN64=1 -f Makefile.msvc

CXX=cl
LD=link
RC=rc

DIR_O=.\obj
DIR_BIN=.

EXE=$(DIR_BIN)\CadZinho.exe
# 
# CadZinho depends on lua 5.4, libsdl 2 and glew
# for libsdl, you can fetch the runtime binaries and development libraries \
#   at http://libsdl.org/download-2.0.php
# for lua and glew, you should build them yourself
# just modify the following directories
INCLUDES = -I $(ZSDK)/include -I $(ZSDK)/include/lua -I $(ZSDK)/include/SDL2
LIBRARIES = $(ZSDK)/lib/x64/lua.lib $(ZSDK)/lib/x64/glew.lib \
            $(ZSDK)/lib/x64/SDL2.lib $(ZSDK)/lib/x64/SDL2main.lib \
            $(ZSDK)/lib/x64/sqlite3.lib

LIBS=$(LIBRARIES) opengl32.lib Shell32.lib

CXX_BASE_FLAGS = /nologo /W4 -D_WINDOWS -D_WIN32 \
                 -D_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES=1 -D_CRT_SECURE_NO_DEPRECATE=1 -D_SCL_SECURE_NO_WARNINGS=1 \
                 /Zi /GR /EHa /Zc:wchar_t /Fd$(DIR_O)/ \
                 -D_USE_MATH_DEFINES -DSKIP_ATTRIBUTE \
                 $(INCLUDES)
                 
LD_BASE_FLAGS  = /nologo

!IFDEF WIN64
CXX_ARCH_FLAGS = -D_WIN64 -D_AMD64_
LD_ARCH_FLAGS = /MACHINE:X64
!ELSE
CXX_ARCH_FLAGS = -D_X86_=1
LD_ARCH_FLAGS = /MACHINE:X86
!ENDIF

!IFDEF DEBUG
CXX_OPT_FLAGS = -D_DEBUG /Od /MTd
LD_OPT_FLAGS  = /DEBUG /SUBSYSTEM:CONSOLE
!ELSE
CXX_OPT_FLAGS = -DNDEBUG /O2 /MT
LD_OPT_FLAGS  = /DEBUG /SUBSYSTEM:WINDOWS /ENTRY:mainCRTStartup
!ENDIF

CXXFLAGS = $(CXX_BASE_FLAGS) $(CXX_OPT_FLAGS) $(CXX_ARCH_FLAGS)
LDFLAGS  = $(LD_BASE_FLAGS) $(LD_OPT_FLAGS) $(LD_ARCH_FLAGS)

all:	$(EXE)


$(EXE): src\*.c $(DIR_O)\cz.res
	@$(MAKE) $(**:.c=.obj)
	$(LD) $(LDFLAGS) -OUT:$@ $(**:.c=.obj) $(DIR_O)\cz.res $(LIBS)

clean:
	-del /q $(DIR_O)\*.obj $(DIR_O)\*.pdb $(DIR_O)\*.res $(EXE) \
	$(DIR_BIN)\*.map $(DIR_BIN)\*.exp $(DIR_BIN)\*.pdb \
	$(DIR_BIN)\*.ilk

# Define how to build all the objects

.c.obj::
	@$(CXX) $(CXXFLAGS) -c -Fo\ $<

$(DIR_O)\cz.res: windows\cz.rc
	@$(RC) /nologo -fo$@ $**
